name: Secrets Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - validate
          - rotate-reminder
      
  schedule:
    # Run monthly secret rotation reminder
    - cron: '0 0 1 * *'

jobs:
  validate-secrets:
    name: Validate Required Secrets
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'validate' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Validate required secrets exist
        run: |
          echo "Validating required secrets configuration..."
          
          EXIT_CODE=0
          
          # Check required secrets
          if [ -z "${{ secrets.HOSTNAME }}" ]; then
            echo "‚ùå HOSTNAME secret is not set"
            EXIT_CODE=1
          else
            echo "‚úì HOSTNAME secret is configured"
          fi
          
          if [ -z "${{ secrets.LETSENCRYPT_EMAIL }}" ]; then
            echo "‚ùå LETSENCRYPT_EMAIL secret is not set"
            EXIT_CODE=1
          else
            echo "‚úì LETSENCRYPT_EMAIL secret is configured"
          fi
          
          # Check optional secrets
          if [ -z "${{ secrets.RAILWAY_TOKEN }}" ]; then
            echo "‚ö† RAILWAY_TOKEN secret is not set (optional for Railway deployment)"
          else
            echo "‚úì RAILWAY_TOKEN secret is configured"
          fi
          
          if [ -z "${{ secrets.DEPLOY_HOST }}" ]; then
            echo "‚ö† DEPLOY_HOST secret is not set (optional for SSH deployment)"
          else
            echo "‚úì DEPLOY_HOST secret is configured"
          fi
          
          if [ -z "${{ secrets.DEPLOY_USER }}" ]; then
            echo "‚ö† DEPLOY_USER secret is not set (optional for SSH deployment)"
          else
            echo "‚úì DEPLOY_USER secret is configured"
          fi
          
          if [ -z "${{ secrets.DEPLOY_SSH_KEY }}" ]; then
            echo "‚ö† DEPLOY_SSH_KEY secret is not set (optional for SSH deployment)"
          else
            echo "‚úì DEPLOY_SSH_KEY secret is configured"
          fi
          
          echo ""
          if [ $EXIT_CODE -eq 0 ]; then
            echo "‚úÖ All required secrets are configured!"
          else
            echo "‚ùå Some required secrets are missing. Please configure them in GitHub Settings."
            echo ""
            echo "Required secrets:"
            echo "  - HOSTNAME: Your deployment domain"
            echo "  - LETSENCRYPT_EMAIL: Email for SSL certificate registration"
            echo ""
            echo "Optional secrets (for specific deployment methods):"
            echo "  - RAILWAY_TOKEN: For Railway deployment"
            echo "  - DEPLOY_HOST: For SSH deployment"
            echo "  - DEPLOY_USER: For SSH deployment"
            echo "  - DEPLOY_SSH_KEY: For SSH deployment"
            echo "  - DEPLOY_PATH: For SSH deployment (default: /opt/treetee)"
          fi
          
          exit $EXIT_CODE
      
      - name: Generate validation report
        if: always()
        env:
          HAS_HOSTNAME: ${{ secrets.HOSTNAME != '' }}
          HAS_EMAIL: ${{ secrets.LETSENCRYPT_EMAIL != '' }}
          HAS_RAILWAY: ${{ secrets.RAILWAY_TOKEN != '' }}
          HAS_DEPLOY_HOST: ${{ secrets.DEPLOY_HOST != '' }}
          HAS_DEPLOY_USER: ${{ secrets.DEPLOY_USER != '' }}
          HAS_DEPLOY_KEY: ${{ secrets.DEPLOY_SSH_KEY != '' }}
        run: |
          {
            echo "## Secrets Validation Report"
            echo ""
            echo "**Date:** $(date -u)"
            echo ""
            
            # Generate summary based on secret existence
            if [ "$HAS_HOSTNAME" = "true" ] && [ "$HAS_EMAIL" = "true" ]; then
              echo "‚úÖ All required secrets are configured"
            else
              echo "‚ùå Some required secrets are missing"
            fi
            
            echo ""
            echo "### Required Secrets Status"
            
            [ "$HAS_HOSTNAME" = "true" ] && echo "- ‚úÖ HOSTNAME" || echo "- ‚ùå HOSTNAME"
            [ "$HAS_EMAIL" = "true" ] && echo "- ‚úÖ LETSENCRYPT_EMAIL" || echo "- ‚ùå LETSENCRYPT_EMAIL"
            
            echo ""
            echo "### Optional Secrets Status"
            
            [ "$HAS_RAILWAY" = "true" ] && echo "- ‚úÖ RAILWAY_TOKEN" || echo "- ‚ö†Ô∏è  RAILWAY_TOKEN (not set)"
            [ "$HAS_DEPLOY_HOST" = "true" ] && echo "- ‚úÖ DEPLOY_HOST" || echo "- ‚ö†Ô∏è  DEPLOY_HOST (not set)"
            [ "$HAS_DEPLOY_USER" = "true" ] && echo "- ‚úÖ DEPLOY_USER" || echo "- ‚ö†Ô∏è  DEPLOY_USER (not set)"
            [ "$HAS_DEPLOY_KEY" = "true" ] && echo "- ‚úÖ DEPLOY_SSH_KEY" || echo "- ‚ö†Ô∏è  DEPLOY_SSH_KEY (not set)"
          } >> "$GITHUB_STEP_SUMMARY"

  rotation-reminder:
    name: Secret Rotation Reminder
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'rotate-reminder' || github.event.schedule == '0 0 1 * *'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Generate rotation reminder
        run: |
          {
            echo "## üîê Monthly Secret Rotation Reminder"
            echo ""
            echo "It's time to review and rotate your secrets for security best practices!"
            echo ""
            echo "### Secrets to Review:"
            echo ""
            echo "1. **SSL/TLS Certificates**"
            echo "   - Check expiration dates"
            echo "   - Renew if necessary (Let's Encrypt auto-renews)"
            echo ""
            echo "2. **MeshCentral Admin Credentials**"
            echo "   - Review admin accounts"
            echo "   - Rotate passwords"
            echo "   - Verify 2FA is enabled"
            echo ""
            echo "3. **API Tokens & Access Keys**"
            echo "   - RAILWAY_TOKEN (if using Railway)"
            echo "   - SSH keys (if using SSH deployment)"
            echo ""
            echo "4. **Review Access Logs**"
            echo "   - Check for unauthorized access attempts"
            echo "   - Review active sessions"
            echo ""
            echo "### Resources:"
            echo ""
            echo "- [Security Policy](SECURITY.md)"
            echo "- [Migration Guide](MIGRATION.md)"
            echo "- [Setup Guide](.github/SECURITY_QUICKSTART.md)"
            echo ""
            echo "**Next rotation reminder:** $(date -u -d '+1 month' '+%Y-%m-%d')"
          } >> "$GITHUB_STEP_SUMMARY"
      
      - name: Create reminder issue (optional)
        if: false  # Set to true if you want to create issues
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üîê Monthly Secret Rotation Reminder',
              body: `## Secret Rotation Reminder
              
              It's time to review and rotate secrets for security best practices.
              
              ### Action Items:
              
              - [ ] Review SSL/TLS certificate expiration
              - [ ] Rotate MeshCentral admin passwords
              - [ ] Review and rotate API tokens
              - [ ] Review access logs for anomalies
              - [ ] Verify 2FA is enabled for all admin accounts
              
              ### Resources:
              
              - [Security Policy](SECURITY.md)
              - [Migration Guide](MIGRATION.md)
              - [Setup Guide](.github/SECURITY_QUICKSTART.md)
              
              This is an automated monthly reminder. Close this issue once rotation is complete.`,
              labels: ['security', 'maintenance']
            });
            
            console.log('Created issue #' + issue.data.number);
